surface urchinPattern (
	color Cin = 1,
output color Cout=0, output float d = 0, output float a = 1)
{
    float repeatCount=30;
    int whichStripe=(int)floor(u*repeatCount);
		float b=(float)(whichStripe%6);
		d = 1;
		if( b < 2 || b > 4){
			d = 0.4;
		}
		if(b == 3 ){
			d = 0.2;
		}

		color white = color(1,1,1);
		float fuzz=0.05;
		float s=mod(repeatCount*u*2,1);
		float t=mod(repeatCount*v*2,1);
		point centre=point (0.5,0.5,0);
		point here=point (s,t,0);
		float dist=distance(centre,here);
		float radius=(float) noise(repeatCount*u,repeatCount*v)*0.2;
		a=1-smoothstep(radius-fuzz,radius+fuzz,dist);
		Cout=mix(Cin,white,a);
		Cout *= d;

}

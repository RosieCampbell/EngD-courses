OpenShadingLanguage 1.00
# Compiled by oslc 1.6.2dev
surface urchinPattern
param	color	Cin	1 1 1		%read{13,17} %write{2147483647,-1}
oparam	color	Cout	0 0 0		%read{25,25} %write{13,25}
oparam	float	a	1		%read{13,13} %write{12,12}
oparam	float	b	0		%read{2147483647,-1} %write{23,23}
global	point	P	%read{21,21} %write{2147483647,-1}
global	float	u	%read{1,8} %write{2147483647,-1}
global	float	v	%read{9,24} %write{2147483647,-1}
local	color	green	%read{25,25} %write{0,0}
local	float	___318_mag	%read{23,23} %write{22,22}
const	color	$const1	0 0.40000001 0		%read{0,0} %write{2147483647,-1}
const	float	$const2	0.69999999		%read{3,3} %write{2147483647,-1}
temp	float	$tmp1	%read{3,3} %write{2,2}
temp	float	$tmp2	%read{2,2} %write{1,1}
const	float	$const4	10		%read{1,1} %write{2147483647,-1}
temp	float	$tmp3	%read{7,7} %write{3,3}
const	float	$const5	0.34999999		%read{6,6} %write{2147483647,-1}
temp	float	$tmp4	%read{6,6} %write{5,5}
temp	float	$tmp5	%read{5,5} %write{4,4}
const	float	$const7	20		%read{4,4} %write{2147483647,-1}
temp	float	$tmp6	%read{7,7} %write{6,6}
temp	float	$tmp7	%read{12,12} %write{7,7}
const	float	$const8	0.029999999		%read{11,11} %write{2147483647,-1}
temp	float	$tmp8	%read{11,11} %write{10,10}
const	string	$const9	"usimplex"		%read{10,10} %write{2147483647,-1}
temp	float	$tmp9	%read{10,10} %write{8,8}
const	float	$const11	40		%read{8,8} %write{2147483647,-1}
temp	float	$tmp10	%read{10,10} %write{9,9}
const	float	$const13	7		%read{9,9} %write{2147483647,-1}
temp	float	$tmp11	%read{12,12} %write{11,11}
const	float	$const14	0.059999999		%read{14,14} %write{2147483647,-1}
temp	int	$tmp12	%read{15,15} %write{14,14}
const	color	$const15	0.1 0.050000001 0.050000001		%read{16,16} %write{2147483647,-1}
temp	color	$tmp13	%read{18,18} %write{17,17}
const	float	$const17	2		%read{18,18} %write{2147483647,-1}
const	float	$const18	0.07		%read{19,19} %write{2147483647,-1}
temp	int	$tmp14	%read{20,20} %write{19,19}
temp	point	$tmp15	%read{22,22} %write{21,21}
const	float	$const20	200		%read{21,21} %write{2147483647,-1}
const	float	$const21	0.60000002		%read{23,24} %write{2147483647,-1}
const	float	$const23	1		%read{23,23} %write{2147483647,-1}
temp	float	$tmp16	%read{25,25} %write{24,24}
code ___main___
# urchinPattern.osl:6
# 		color green = color(0,0.4,0);
	assign		green $const1 	%filename{"urchinPattern.osl"} %line{6} %argrw{"wr"}
# urchinPattern.osl:7
# 		a = 0.7*noise(u*10)+0.35*noise(u*20)+0.03*noise("usimplex",u*40, v*7);
	mul		$tmp2 u $const4 	%line{7} %argrw{"wrr"}
	noise		$tmp1 $tmp2 	%argrw{"wr"}
	mul		$tmp3 $const2 $tmp1 	%argrw{"wrr"}
	mul		$tmp5 u $const7 	%argrw{"wrr"}
	noise		$tmp4 $tmp5 	%argrw{"wr"}
	mul		$tmp6 $const5 $tmp4 	%argrw{"wrr"}
	add		$tmp7 $tmp3 $tmp6 	%argrw{"wrr"}
	mul		$tmp9 u $const11 	%argrw{"wrr"}
	mul		$tmp10 v $const13 	%argrw{"wrr"}
	noise		$tmp8 $const9 $tmp9 $tmp10 	%argrw{"wrrr"}
	mul		$tmp11 $const8 $tmp8 	%argrw{"wrr"}
	add		a $tmp7 $tmp11 	%argrw{"wrr"}
# urchinPattern.osl:8
# 		Cout = Cin*a;
	mul		Cout Cin a 	%line{8} %argrw{"wrr"}
# urchinPattern.osl:9
# 		if(v < .06){
	lt		$tmp12 v $const14 	%line{9} %argrw{"wrr"}
	if		$tmp12 19 26 	%argrw{"r"}
# urchinPattern.osl:10
# 			Cout = color(0.1,0.05,0.05);
	assign		Cout $const15 	%line{10} %argrw{"wr"}
# urchinPattern.osl:11
# 			Cout = Cin * v*2;
	mul		$tmp13 Cin v 	%line{11} %argrw{"wrr"}
	mul		Cout $tmp13 $const17 	%argrw{"wrr"}
# urchinPattern.osl:13
# 		else if( v > 0.07){
	gt		$tmp14 v $const18 	%line{13} %argrw{"wrr"}
	if		$tmp14 26 26 	%argrw{"r"}
# urchinPattern.osl:14
# 	    float mag=noise(P*200);
	mul		$tmp15 P $const20 	%line{14} %argrw{"wrr"}
	noise		___318_mag $tmp15 	%argrw{"wr"}
# urchinPattern.osl:15
# 	    b=smoothstep(0.6,1,mag);
	smoothstep	b $const21 $const23 ___318_mag 	%line{15} %argrw{"wrrr"}
# urchinPattern.osl:16
# 			Cout = mix(Cout, green, 0.6*v);
	mul		$tmp16 $const21 v 	%line{16} %argrw{"wrr"}
	mix		Cout Cout green $tmp16 	%argrw{"wrrr"}
	end

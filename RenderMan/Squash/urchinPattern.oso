OpenShadingLanguage 1.00
# Compiled by oslc 1.6.2dev
surface urchinPattern
param	color	Cin	1 1 1		%read{12,16} %write{2147483647,-1}
oparam	color	Cout	0 0 0		%read{2147483647,-1} %write{12,17}
oparam	float	a	1		%read{12,12} %write{11,11}
global	float	u	%read{0,7} %write{2147483647,-1}
global	float	v	%read{8,16} %write{2147483647,-1}
const	float	$const1	0.69999999		%read{2,2} %write{2147483647,-1}
temp	float	$tmp1	%read{2,2} %write{1,1}
temp	float	$tmp2	%read{1,1} %write{0,0}
const	float	$const3	10		%read{0,0} %write{2147483647,-1}
temp	float	$tmp3	%read{6,6} %write{2,2}
const	float	$const4	0.34999999		%read{5,5} %write{2147483647,-1}
temp	float	$tmp4	%read{5,5} %write{4,4}
temp	float	$tmp5	%read{4,4} %write{3,3}
const	float	$const6	20		%read{3,3} %write{2147483647,-1}
temp	float	$tmp6	%read{6,6} %write{5,5}
temp	float	$tmp7	%read{11,11} %write{6,6}
const	float	$const7	0.029999999		%read{10,10} %write{2147483647,-1}
temp	float	$tmp8	%read{10,10} %write{9,9}
const	string	$const8	"usimplex"		%read{9,9} %write{2147483647,-1}
temp	float	$tmp9	%read{9,9} %write{7,7}
const	float	$const10	40		%read{7,7} %write{2147483647,-1}
temp	float	$tmp10	%read{9,9} %write{8,8}
const	float	$const12	7		%read{8,8} %write{2147483647,-1}
temp	float	$tmp11	%read{11,11} %write{10,10}
const	float	$const13	0.059999999		%read{13,13} %write{2147483647,-1}
temp	int	$tmp12	%read{14,14} %write{13,13}
const	color	$const14	0.1 0.050000001 0.050000001		%read{15,15} %write{2147483647,-1}
temp	color	$tmp13	%read{17,17} %write{16,16}
const	float	$const16	2		%read{17,17} %write{2147483647,-1}
code ___main___
# urchinPattern.osl:8
# 		a = 0.7*noise(u*10)+0.35*noise(u*20)+0.03*noise("usimplex",u*40, v*7);
	mul		$tmp2 u $const3 	%filename{"urchinPattern.osl"} %line{8} %argrw{"wrr"}
	noise		$tmp1 $tmp2 	%argrw{"wr"}
	mul		$tmp3 $const1 $tmp1 	%argrw{"wrr"}
	mul		$tmp5 u $const6 	%argrw{"wrr"}
	noise		$tmp4 $tmp5 	%argrw{"wr"}
	mul		$tmp6 $const4 $tmp4 	%argrw{"wrr"}
	add		$tmp7 $tmp3 $tmp6 	%argrw{"wrr"}
	mul		$tmp9 u $const10 	%argrw{"wrr"}
	mul		$tmp10 v $const12 	%argrw{"wrr"}
	noise		$tmp8 $const8 $tmp9 $tmp10 	%argrw{"wrrr"}
	mul		$tmp11 $const7 $tmp8 	%argrw{"wrr"}
	add		a $tmp7 $tmp11 	%argrw{"wrr"}
# urchinPattern.osl:9
# 		Cout = Cin*a;
	mul		Cout Cin a 	%line{9} %argrw{"wrr"}
# urchinPattern.osl:11
# 		if(v < .06){
	lt		$tmp12 v $const13 	%line{11} %argrw{"wrr"}
	if		$tmp12 18 18 	%argrw{"r"}
# urchinPattern.osl:12
# 			Cout = color(0.1,0.05,0.05);
	assign		Cout $const14 	%line{12} %argrw{"wr"}
# urchinPattern.osl:13
# 			Cout = Cin * v*2;
	mul		$tmp13 Cin v 	%line{13} %argrw{"wrr"}
	mul		Cout $tmp13 $const16 	%argrw{"wrr"}
	end

OpenShadingLanguage 1.00
# Compiled by oslc 1.6.2dev
surface wave
param	color	Cin	1 1 1		%read{13,13} %write{2147483647,-1}
oparam	color	Cout	0 0 0		%read{2147483647,-1} %write{13,13}
global	float	u	%read{6,6} %write{2147483647,-1}
global	float	v	%read{2,2} %write{2147483647,-1}
local	color	green	%read{13,13} %write{0,0}
local	float	fuzz	%read{9,10} %write{1,1}
local	float	s	%read{7,7} %write{6,6}
local	float	dist	%read{11,11} %write{8,8}
local	float	inLine	%read{13,13} %write{12,12}
const	string	$const1	"rgb"		%read{0,0} %write{2147483647,-1}
const	float	$const3	0		%read{0,0} %write{2147483647,-1}
const	float	$const5	1		%read{0,12} %write{2147483647,-1}
const	float	$const6	0.025		%read{1,1} %write{2147483647,-1}
temp	float	$tmp1	%read{5,5} %write{4,4}
temp	float	$tmp2	%read{3,3} %write{2,2}
const	float	$const8	2		%read{2,2} %write{2147483647,-1}
const	float	$const9	3.1415927		%read{3,3} %write{2147483647,-1}
temp	float	$tmp3	%read{4,4} %write{3,3}
const	float	$const10	0.40000001		%read{5,5} %write{2147483647,-1}
temp	float	$tmp4	%read{6,6} %write{5,5}
const	float	$const11	0.5		%read{7,7} %write{2147483647,-1}
temp	float	$tmp5	%read{8,8} %write{7,7}
temp	float	$tmp6	%read{12,12} %write{11,11}
const	float	$const12	0.1		%read{9,10} %write{2147483647,-1}
temp	float	$tmp7	%read{11,11} %write{9,9}
temp	float	$tmp8	%read{11,11} %write{10,10}
code ___main___
# wave.osl:6
#     color green=color("rgb",0,1,0);
	color		green $const1 $const3 $const5 $const3 	%filename{"wave.osl"} %line{6} %argrw{"wrrrr"}
# wave.osl:7
#     float fuzz=0.025;
	assign		fuzz $const6 	%line{7} %argrw{"wr"}
# wave.osl:9
#     float s=u+sin(v*2*M_PI)*0.4;
	mul		$tmp2 v $const8 	%line{9} %argrw{"wrr"}
	mul		$tmp3 $tmp2 $const9 	%argrw{"wrr"}
	sin		$tmp1 $tmp3 	%argrw{"wr"}
	mul		$tmp4 $tmp1 $const10 	%argrw{"wrr"}
	add		s u $tmp4 	%argrw{"wrr"}
# wave.osl:10
#     float dist=abs(s-0.5);
	sub		$tmp5 s $const11 	%line{10} %argrw{"wrr"}
	abs		dist $tmp5 	%argrw{"wr"}
# wave.osl:11
#     float inLine=1-smoothstep(0.1-fuzz,0.1+fuzz,dist);
	sub		$tmp7 $const12 fuzz 	%line{11} %argrw{"wrr"}
	add		$tmp8 $const12 fuzz 	%argrw{"wrr"}
	smoothstep	$tmp6 $tmp7 $tmp8 dist 	%argrw{"wrrr"}
	sub		inLine $const5 $tmp6 	%argrw{"wrr"}
# wave.osl:13
#     Cout=mix(Cin,green,inLine);
	mix		Cout Cin green inLine 	%line{13} %argrw{"wrrr"}
	end

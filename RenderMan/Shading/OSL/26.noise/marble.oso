OpenShadingLanguage 1.00
# Compiled by oslc 1.6.2dev
shader marble
param	color	Cin	1 1 1		%read{2147483647,-1} %write{2147483647,-1}
oparam	color	Cout	1 1 1		%read{2147483647,-1} %write{42,42}
global	point	P	%read{3,3} %write{2147483647,-1}
local	float	i	%read{5,14} %write{5,14}
local	float	mag	%read{5,42} %write{0,15}
local	float	freq	%read{5,14} %write{1,14}
local	point	PP	%read{4,8} %write{3,4}
local	color[13]	sCols	%read{42,42} %write{17,41}
const	int	$const1	0		%read{0,17} %write{2147483647,-1}
const	int	$const2	1		%read{1,19} %write{2147483647,-1}
const	string	$const3	"shader"		%read{3,3} %write{2147483647,-1}
const	string	$const4	"transform"		%read{2,2} %write{2147483647,-1}
const	string	$const5	"common"		%read{3,3} %write{2147483647,-1}
const	int	$const6	3		%read{23,23} %write{2147483647,-1}
const	float	$const7	3		%read{4,4} %write{2147483647,-1}
const	int	$const8	8		%read{7,33} %write{2147483647,-1}
temp	int	$tmp1	%read{5,14} %write{5,14}
temp	float	$tmp2	%read{11,11} %write{10,10}
temp	float	$tmp3	%read{10,10} %write{9,9}
const	string	$const9	"perlin"		%read{9,9} %write{2147483647,-1}
temp	point	$tmp4	%read{9,9} %write{8,8}
temp	float	$tmp5	%read{12,12} %write{11,11}
const	float	$const10	2.0999999		%read{13,13} %write{2147483647,-1}
const	float	$const11	1		%read{14,14} %write{2147483647,-1}
const	float	$const12	0		%read{15,15} %write{2147483647,-1}
const	float	$const13	0.40000001		%read{15,15} %write{2147483647,-1}
temp	color	$tmp6	%read{17,17} %write{16,16}
const	string	$const14	"rgb"		%read{16,40} %write{2147483647,-1}
const	float	$const15	0.25		%read{16,38} %write{2147483647,-1}
const	float	$const16	0.34999999		%read{16,38} %write{2147483647,-1}
temp	color	$tmp7	%read{19,19} %write{18,18}
temp	color	$tmp8	%read{21,21} %write{20,20}
const	float	$const17	0.2		%read{20,40} %write{2147483647,-1}
const	float	$const18	0.30000001		%read{20,24} %write{2147483647,-1}
const	int	$const19	2		%read{21,21} %write{2147483647,-1}
temp	color	$tmp9	%read{23,23} %write{22,22}
temp	color	$tmp10	%read{25,25} %write{24,24}
const	int	$const20	4		%read{25,25} %write{2147483647,-1}
temp	color	$tmp11	%read{27,27} %write{26,26}
const	int	$const21	5		%read{27,27} %write{2147483647,-1}
temp	color	$tmp12	%read{29,29} %write{28,28}
const	int	$const22	6		%read{29,29} %write{2147483647,-1}
temp	color	$tmp13	%read{31,31} %write{30,30}
const	float	$const23	0.15000001		%read{30,32} %write{2147483647,-1}
const	float	$const24	0.1		%read{30,40} %write{2147483647,-1}
const	int	$const25	7		%read{31,31} %write{2147483647,-1}
temp	color	$tmp14	%read{33,33} %write{32,32}
temp	color	$tmp15	%read{35,35} %write{34,34}
const	int	$const26	9		%read{35,35} %write{2147483647,-1}
temp	color	$tmp16	%read{37,37} %write{36,36}
const	int	$const27	10		%read{37,37} %write{2147483647,-1}
temp	color	$tmp17	%read{39,39} %write{38,38}
const	int	$const28	11		%read{39,39} %write{2147483647,-1}
temp	color	$tmp18	%read{41,41} %write{40,40}
const	int	$const29	12		%read{41,41} %write{2147483647,-1}
const	string	$const30	"catmull-rom"		%read{42,42} %write{2147483647,-1}
code ___main___
# marble.osl:7
#     float mag=0;
	assign		mag $const1 	%filename{"marble.osl"} %line{7} %argrw{"wr"}
# marble.osl:8
#     float freq=1;
	assign		freq $const2 	%line{8} %argrw{"wr"}
# marble.osl:9
#     point PP=transform("shader",P);
	functioncall	$const4 4 	%line{9} %argrw{"r"}
# /Applications/Pixar/RenderManProServer-20.4/lib/osl/include/stdosl.h:243
# 
	transform	PP $const5 $const3 P 	%filename{"/Applications/Pixar/RenderManProServer-20.4/lib/osl/include/stdosl.h"} %line{243} %argrw{"wrrr"}
# marble.osl:10
#     PP*=3;
	mul		PP PP $const7 	%filename{"marble.osl"} %line{10} %argrw{"wrr"}
# marble.osl:12
#     for(i=0;i<8;i+=1)
	for		$tmp1 7 8 14 15 	%line{12} %argrw{"r"}
	assign		i $const1 	%argrw{"wr"}
	lt		$tmp1 i $const8 	%argrw{"wrr"}
# marble.osl:14
# 		mag+=abs((float)noise("perlin",PP*freq))/freq;
	mul		$tmp4 PP freq 	%line{14} %argrw{"wrr"}
	noise		$tmp3 $const9 $tmp4 	%argrw{"wrr"}
	abs		$tmp2 $tmp3 	%argrw{"wr"}
	div		$tmp5 $tmp2 freq 	%argrw{"wrr"}
	add		mag mag $tmp5 	%argrw{"wrr"}
# marble.osl:15
#         freq*=2.1;
	mul		freq freq $const10 	%line{15} %argrw{"wrr"}
# marble.osl:12
#     for(i=0;i<8;i+=1)
	add		i i $const11 	%line{12} %argrw{"wrr"}
# marble.osl:18
#     mag=smoothstep(0,0.4,mag);
	smoothstep	mag $const12 $const13 mag 	%line{18} %argrw{"wrrr"}
# marble.osl:21
# 	color("rgb",0.25,0.35,0.25),
	color		$tmp6 $const14 $const15 $const16 $const15 	%line{21} %argrw{"wrrrr"}
# marble.osl:34
# 	};
	aassign		sCols $const1 $tmp6 	%line{34} %argrw{"wrr"}
# marble.osl:22
#         color("rgb",0.25,0.35,0.25),
	color		$tmp7 $const14 $const15 $const16 $const15 	%line{22} %argrw{"wrrrr"}
# marble.osl:34
# 	};
	aassign		sCols $const2 $tmp7 	%line{34} %argrw{"wrr"}
# marble.osl:23
#         color("rgb",0.20,0.30,0.20),
	color		$tmp8 $const14 $const17 $const18 $const17 	%line{23} %argrw{"wrrrr"}
# marble.osl:34
# 	};
	aassign		sCols $const19 $tmp8 	%line{34} %argrw{"wrr"}
# marble.osl:24
#         color("rgb",0.20,0.30,0.20),
	color		$tmp9 $const14 $const17 $const18 $const17 	%line{24} %argrw{"wrrrr"}
# marble.osl:34
# 	};
	aassign		sCols $const6 $tmp9 	%line{34} %argrw{"wrr"}
# marble.osl:25
#         color("rgb",0.20,0.30,0.20),
	color		$tmp10 $const14 $const17 $const18 $const17 	%line{25} %argrw{"wrrrr"}
# marble.osl:34
# 	};
	aassign		sCols $const20 $tmp10 	%line{34} %argrw{"wrr"}
# marble.osl:26
#         color("rgb",0.25,0.35,0.35),
	color		$tmp11 $const14 $const15 $const16 $const16 	%line{26} %argrw{"wrrrr"}
# marble.osl:34
# 	};
	aassign		sCols $const21 $tmp11 	%line{34} %argrw{"wrr"}
# marble.osl:27
#         color("rgb",0.25,0.35,0.35),
	color		$tmp12 $const14 $const15 $const16 $const16 	%line{27} %argrw{"wrrrr"}
# marble.osl:34
# 	};
	aassign		sCols $const22 $tmp12 	%line{34} %argrw{"wrr"}
# marble.osl:28
#         color("rgb",0.15,0.25,0.10),
	color		$tmp13 $const14 $const23 $const15 $const24 	%line{28} %argrw{"wrrrr"}
# marble.osl:34
# 	};
	aassign		sCols $const25 $tmp13 	%line{34} %argrw{"wrr"}
# marble.osl:29
#         color("rgb",0.15,0.25,0.10),
	color		$tmp14 $const14 $const23 $const15 $const24 	%line{29} %argrw{"wrrrr"}
# marble.osl:34
# 	};
	aassign		sCols $const8 $tmp14 	%line{34} %argrw{"wrr"}
# marble.osl:30
#         color("rgb",0.10,0.20,0.10),
	color		$tmp15 $const14 $const24 $const17 $const24 	%line{30} %argrw{"wrrrr"}
# marble.osl:34
# 	};
	aassign		sCols $const26 $tmp15 	%line{34} %argrw{"wrr"}
# marble.osl:31
#         color("rgb",0.10,0.20,0.10),
	color		$tmp16 $const14 $const24 $const17 $const24 	%line{31} %argrw{"wrrrr"}
# marble.osl:34
# 	};
	aassign		sCols $const27 $tmp16 	%line{34} %argrw{"wrr"}
# marble.osl:32
#         color("rgb",0.25,0.35,0.25),
	color		$tmp17 $const14 $const15 $const16 $const15 	%line{32} %argrw{"wrrrr"}
# marble.osl:34
# 	};
	aassign		sCols $const28 $tmp17 	%line{34} %argrw{"wrr"}
# marble.osl:33
#         color("rgb",0.10,0.10,0.20)
	color		$tmp18 $const14 $const24 $const24 $const17 	%line{33} %argrw{"wrrrr"}
# marble.osl:34
# 	};
	aassign		sCols $const29 $tmp18 	%line{34} %argrw{"wrr"}
# marble.osl:36
#     Cout=(color)spline("catmull-rom",mag,sCols);
	spline		Cout $const30 mag sCols 	%line{36} %argrw{"wrrr"}
	end
